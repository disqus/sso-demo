import { useState } from 'react';
import { DiscussionEmbed } from 'disqus-react';
import axios from 'axios';

const DisqusSSO = () => {
    const [loggedIn, setLoggedInStatus] = useState(false);
    const [loginPayload, setLoginPayload] = useState('');
    const [loginPublicKey, setLoginPublicKey] = useState('');
    const [loginTestField, setLoginTestField] = useState('');
    const [remoteAuthS3, setRemoteAuthS3] = useState('');

    const handleLogin = async () => {
        const userData = {
            username: 'email subscriber',
            id: '12345',
            email: 'emailsubscriber@example.com',
            avatar: 'https://example.com/avatar.jpg'
        };

        const apiUrl = window.location.hostname === 'localhost' 
          ? 'http://localhost:8787'
          : 'https://sso-serverless.ctang-402.workers.dev';

        axios({
            url: `${apiUrl}/sso`,
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            data: { user: userData }
        })
            .then(response => response.data.sso)
            .then(sso => {
                setLoginPayload(`remoteAuthS3 payload: ${sso.auth}`);
                setLoginPublicKey(`Public Key: ${sso.pubKey}`);
                setLoginTestField(`Test Field: ${sso.test}`);
                setLoggedInStatus(true);
                setRemoteAuthS3(sso.auth);
            })
            .catch(err => console.error(err))
    }

    const handleLogout = () => {
        setRemoteAuthS3('e30= c1ad77866d19a308f133d18bb12a3e1f5d536a3b 1495142696');
        setLoggedInStatus(false);
    }

    return (
        <>
            <div id='login-logout-buttons'>
                <button
                    onClick={handleLogin}
                >
                    Login
                </button>
                <button
                    onClick={handleLogout}
                >
                    Log out user with empty SSO auth
                </button>
            </div>
            {loggedIn ? 
            <div id='login-payload'>
                <p>
                    {loginPayload}
                </p>
                <p>
                    {loginPublicKey}
                </p>
                <p>
                    {loginTestField}
                </p> 
            </div> : null}
            <DiscussionEmbed
                shortname='ssoglitch'
                config={
                    {
                        url: 'https://disqus-sso-demo.glitch.me/',
                        identifier: '1 https://disqus-sso-demo.glitch.me/',
                        title: 'Disqus SSO quick start',
                        apiKey: 'IrsWOMVmYfDfTq7IJ5fXMA2Ix99nB30EF7cP77SDgIrGyoQna1wXwU42wx17xRjN', // Your Disqus API key that can be generated or referenced at https://disqus.com/api/applications/
                        remoteAuthS3: remoteAuthS3, // Generated by your server (see https://help.disqus.com/customer/en/articles/1717160-integrating-single-sign-on for more details)
                        sso: { // this `sso` object is optional.  It is only needed if you want the SSO login button to appear next to the Disqus login options
                            name:   "SampleNews",
                            button:  "http://example.com/images/samplenews.gif",
                            icon:     "http://example.com/favicon.png",
                            url:        "http://example.com/login/",
                            logout:  "http://example.com/logout/",
                            profile_url: "http://example.com/profileUrlTemplate/{username}",
                            width:   "800",
                            height:  "400"
                        },
                    }
                }
            />
        </>

    )
}

export default DisqusSSO;
